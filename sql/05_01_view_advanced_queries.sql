-- 1. Confirm new column and phone numbers
SELECT
  MEMBER_ID,
  FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME,
  PHONE_NUMBER
FROM TEAM_MEMBERS
WHERE PHONE_NUMBER IS NOT NULL;

-- 2. Confirm new team member "Rahul Sharma" added in step 5
SELECT
  MEMBER_ID,
  FIRST_NAME,
  LAST_NAME,
  ROLE,
  EMAIL,
  AGE,
  JOIN_DATE,
  PHONE_NUMBER
FROM TEAM_MEMBERS
WHERE FIRST_NAME = 'Rahul' AND LAST_NAME = 'Sharma';

-- 3. Confirm new project and dataset linked to Rahul Sharma
SELECT
  P.PROJECT_ID,
  P.PROJECT_NAME,
  P.DOMAIN,
  P.START_DATE,
  TM.FIRST_NAME || ' ' || TM.LAST_NAME AS PROJECT_LEAD
FROM PROJECTS P
JOIN TEAM_MEMBERS TM ON P.LEAD_ID = TM.MEMBER_ID
WHERE TM.FIRST_NAME = 'Rahul';

SELECT
  DATASET_NAME,
  SIZE_MB,
  CREATED_DATE,
  PROJECT_ID
FROM DATASETS
WHERE PROJECT_ID = 'PRJ04';

-- 4. View project counts per member (CTE logic)
WITH ProjectCount AS (
  SELECT
    TM.MEMBER_ID,
    TM.FIRST_NAME,
    TM.LAST_NAME,
    COUNT(P.PROJECT_ID) AS PROJECTS_LED
  FROM TEAM_MEMBERS TM
  LEFT JOIN PROJECTS P ON TM.MEMBER_ID = P.LEAD_ID
  GROUP BY TM.MEMBER_ID, TM.FIRST_NAME, TM.LAST_NAME
)
SELECT * FROM ProjectCount
ORDER BY PROJECTS_LED DESC;

-- 5. Age ranking within offices (Window Function)
SELECT
  TM.FIRST_NAME,
  TM.LAST_NAME,
  O.LOCATION_NAME,
  TM.AGE,
  RANK() OVER (PARTITION BY O.OFFICE_ID ORDER BY TM.AGE DESC) AS AGE_RANK
FROM TEAM_MEMBERS TM
JOIN OFFICES O ON TM.OFFICE_ID = O.OFFICE_ID
ORDER BY O.LOCATION_NAME, AGE_RANK;

-- 6. Dataset with project and lead name (multi-join check)
SELECT
  D.DATASET_NAME,
  D.SIZE_MB,
  P.PROJECT_NAME,
  TM.FIRST_NAME || ' ' || TM.LAST_NAME AS PROJECT_LEAD
FROM DATASETS D
JOIN PROJECTS P ON D.PROJECT_ID = P.PROJECT_ID
JOIN TEAM_MEMBERS TM ON P.LEAD_ID = TM.MEMBER_ID
ORDER BY D.SIZE_MB DESC;
